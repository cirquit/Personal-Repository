
==================== FINAL INTERFACE ====================
2016-01-03 16:34:44.846732 UTC

interface adven_50qzlX786zH5MCh4a2QQrZ:Day05 7102
  interface hash: c2c0ad939e0a45ab4d80c2af5f429665
  ABI hash: 348ec31c25e4c99d84fde8895a7d423a
  export-list hash: fb0f91c97f20d7f6cdd17f983db68179
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b49ac43a2dcea5d8c160dc52ed86966e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Day05.complexPairs
  Day05.contains3Vowels
  Day05.doubleLetters
  Day05.noPairs
  Day05.oneLetterBetween
  Day05.part1
  Day05.part2
module dependencies:
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0* containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:Data.OldList 21f46c368c20a00483b41333e53a55cb
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map 8137ae58be1ec45e0e573cabbb314b88
import  -/  containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base f612c5e011acafca0324bd65cbb4b781
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
29dc56505eb4a8323c5113dec95daab2
  $w$sgo10 ::
    ([GHC.Types.Char] -> a1 -> a1 -> a1)
    -> [GHC.Types.Char]
    -> a1
    -> Data.Map.Base.Map [GHC.Types.Char] a1
    -> (# GHC.Base.Maybe a1, Data.Map.Base.Map [GHC.Types.Char] a1 #)
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><S,1*U><L,U><S,1*U>,
     Inline: [0] -}
442ee1b092f7579f2e16a12b5274d877
  $wgo :: GHC.Prim.Int# -> GHC.Base.String -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,U><L,1*U>, Inline: [0] -}
5c6728013551e34d87fe5139d508a69a
  $wgo1 :: [GHC.Base.String] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
c8bdb5a73c6d0f1b42f6229741198b70
  $wgo2 :: [GHC.Base.String] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
e487783ca0a1a488f97ed8c04bf457d9
  complexPairs :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (Day05.complexPairs_go
                   (Data.Map.Base.Tip @ GHC.Base.String @ GHC.Types.Int)) -}
3909df5ac1f0ed776dcbc8a6263672ee
  complexPairs_go ::
    Data.Map.Base.Map GHC.Base.String GHC.Types.Int
    -> GHC.Base.String -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
cc7ae6129d46e2f18a90e249cd9b4f93
  contains3Vowels :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (\ w :: GHC.Base.String -> Day05.$wgo 0 w) -}
95a7bd2eddd7b66bef9e02e07cd8866c
  doubleLetters :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
1ac83552a671b594dcd160737e2de906
  noPairs :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U> -}
aa825a4ef1bd9d5df32a7e638e3f5cde
  oneLetterBetween :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
c39d00627f8f4dc0ee7df98e3f54eaef
  part1 :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Day05.part4 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
40b5100bf3bdacba0dfacab38554c3ad
  part2 :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Day05.part6 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
8ea63124ab52dc66a0487edf291bef60
  part4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Day05.part5
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case Day05.$wgo1 (Data.OldList.lines ipv3) 0 of ww { DEFAULT ->
                    case GHC.Show.$wshowSignedInt
                           0
                           ww
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   GHC.Types.True
                   ipv2 } }) -}
093bc897f547caf732c238da18e65b07
  part5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "day05-input.txt"#) -}
516abd4f0ac3e60ce378a774b1cc478a
  part6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Day05.part5
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case Day05.$wgo2 (Data.OldList.lines ipv3) 0 of ww { DEFAULT ->
                    case GHC.Show.$wshowSignedInt
                           0
                           ww
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   GHC.Types.True
                   ipv2 } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

