
==================== FINAL INTERFACE ====================
2015-12-18 21:54:10.514992 UTC

interface adven_DdIfP9OJOkiGBtIwpnkiVR:Day07 7102
  interface hash: c80b02dbca1b4663c35fa14d123300a2
  ABI hash: 97ec6301acbc396936d008c65d4e00e6
  export-list hash: 514d168299dd3ad3e5de4fb083008ef1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: fa9503a4b03c265efc8b5152b175dd63
  sig of: Nothing
  used TH splices: False
  where
exports:
  Day07.parseToMap
  Day07.part1
  Day07.Circuit{Day07.AND Day07.I Day07.LSHIFT Day07.NOT Day07.OR Day07.RSHIFT Day07.Var}
module dependencies:
package dependencies: base-4.8.1.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:GHC.Generics
import  -/  base-4.8.1.0:Data.Bits 5341167fdd5958c2b3f0dac8924f1efd
import  -/  base-4.8.1.0:Data.Char ba93ec4ca3776f6d9a8c8a6223b2fb26
import  -/  base-4.8.1.0:Data.List 2a4f5f92892d432e7113f64cd9dcca53
import  -/  base-4.8.1.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.1.0:Data.OldList 21f46c368c20a00483b41333e53a55cb
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.List f31ed8784b3e05f1397195751f7d74ea
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  base-4.8.1.0:Text.Read 30509137a501bd56d136aca29a7a35a6
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
4eadb7d26a5ab33fcbe10e11af3c6a3b
  $wtoCircuit ::
    GHC.Base.String -> (# GHC.Base.String, Day07.Circuit #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
8d52d94a678275285e69e0e599ec1db1
  data Circuit
    = I GHC.Types.Int
    | Var GHC.Base.String
    | NOT Day07.Circuit
    | AND Day07.Circuit Day07.Circuit
    | OR Day07.Circuit Day07.Circuit
    | LSHIFT Day07.Circuit GHC.Types.Int
    | RSHIFT Day07.Circuit GHC.Types.Int
0ad04c20d4bb7455f641de3648fc6587
  parseToMap :: GHC.Base.String -> [(GHC.Base.String, Day07.Circuit)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: GHC.Base.String ->
                 GHC.Base.build
                   @ (GHC.Base.String, Day07.Circuit)
                   (\ @ b1
                      c :: (GHC.Base.String, Day07.Circuit) -> b1 -> b1[OneShot]
                      n :: b1[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Types.Char]
                      @ b1
                      (GHC.Base.mapFB
                         @ (GHC.Base.String, Day07.Circuit)
                         @ b1
                         @ [GHC.Types.Char]
                         c
                         Day07.parseToMap_toCircuit)
                      n
                      (Data.OldList.lines x))) -}
54869e246e4f284df55e14c1b45b98fc
  parseToMap_toCircuit ::
    GHC.Base.String -> (GHC.Base.String, Day07.Circuit)
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Base.String ->
                 case Day07.$wtoCircuit w of ww { (#,#) ww1 ww2 -> (ww1, ww2) }) -}
edf28823b61c8419c53957bc85201ed8
  part1 :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Day07.part2 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
30a1a7eb562d11d49952ecd5470fd1d1
  part2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

