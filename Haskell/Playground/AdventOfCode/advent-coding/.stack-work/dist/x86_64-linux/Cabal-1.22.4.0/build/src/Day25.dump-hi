
==================== FINAL INTERFACE ====================
2016-01-03 16:34:42.151738 UTC

interface adven_50qzlX786zH5MCh4a2QQrZ:Day25 7102
  interface hash: a50216caf8d20589c7c0313b5ab79b9e
  ABI hash: 64822bf7e481dd8afca14b919db11e54
  export-list hash: 0d42fe8f4d2ca640252f6e44a6a349db
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1177ed9910be22cb08b17094c1021b20
  sig of: Nothing
  used TH splices: False
  where
exports:
  Day25.index
  Day25.indexCol
  Day25.indexRow
  Day25.part1
  Day25.stream
module dependencies:
package dependencies: base-4.8.1.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:GHC.Generics
import  -/  base-4.8.1.0:GHC.List f31ed8784b3e05f1397195751f7d74ea
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Real 4c3b525ecbd4d62bb287aec36d4c2f0d
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type bf9b4d13b1dbe96a83786d2e47d2e8ca
b6b614a7e849947901b66b4c5797dff2
  $windex :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ww1 :: GHC.Prim.Int# ->
                 case GHC.Classes.divInt#
                        (GHC.Prim.*# ww1 (GHC.Prim.+# ww1 1))
                        2 of ww4 { DEFAULT ->
                 let {
                   x :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww
                 } in
                 case GHC.Classes.divInt#
                        (GHC.Prim.*# (GHC.Prim.-# x 2) (GHC.Prim.-# x 1))
                        2 of ww2 { DEFAULT ->
                 case GHC.Classes.divInt#
                        (GHC.Prim.*# ww1 (GHC.Prim.-# ww1 1))
                        2 of ww3 { DEFAULT ->
                 GHC.Prim.+# ww4 (GHC.Prim.-# ww2 ww3) } } }) -}
1d63d6f92604b0681e2ddc4cdd25e0cf
  index :: (GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U(U),1*U(U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: (GHC.Types.Int, GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 case Day25.$windex ww4 ww6 of ww7 { DEFAULT ->
                 GHC.Types.I# ww7 } } } }) -}
f9e634d016af57ab8ca7e93d49a68634
  indexCol :: (GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U(U),1*U(U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: (GHC.Types.Int, GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 let {
                   x :: GHC.Prim.Int# = GHC.Prim.+# ww4 ww6
                 } in
                 case GHC.Classes.divInt#
                        (GHC.Prim.*# (GHC.Prim.-# x 2) (GHC.Prim.-# x 1))
                        2 of ww7 { DEFAULT ->
                 case GHC.Classes.divInt#
                        (GHC.Prim.*# ww4 (GHC.Prim.-# ww4 1))
                        2 of ww8 { DEFAULT ->
                 GHC.Types.I# (GHC.Prim.-# ww7 ww8) } } } } }) -}
dea2d3ac3acc3c8a0b658f1395f3d6f4
  indexRow :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ row :: GHC.Types.Int ->
                 case row of wild { GHC.Types.I# x ->
                 case GHC.Classes.divInt#
                        (GHC.Prim.*# x (GHC.Prim.+# x 1))
                        2 of ww4 { DEFAULT ->
                 GHC.Types.I# ww4 } }) -}
32f5d97e8ea48386d2fc86b464c3c537
  part1 :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Day25.part2 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
3409f70fa9ac0c9bbf07e25493dcfd74
  part2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Day25.part3
                   GHC.Types.True
                   eta) -}
86a0b03cc51cbdabaf98caee131f1931
  part3 :: GHC.Base.String
  {- Unfolding: (case GHC.Classes.divInt#
                        9458700
                        2 of ww4 { DEFAULT ->
                 case GHC.Classes.divInt# 36656970 2 of ww1 { DEFAULT ->
                 case GHC.Classes.divInt# 9452550 2 of ww2 { DEFAULT ->
                 case GHC.Show.$w$cshowsPrec1
                        0
                        (GHC.List.$w!!
                           @ GHC.Integer.Type.Integer
                           Day25.stream
                           (GHC.Prim.-# (GHC.Prim.+# ww4 (GHC.Prim.-# ww1 ww2)) 1))
                        (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } } } }) -}
ae3cb35f8e9983021940c04ae7b91eaf
  stream :: [GHC.Integer.Type.Integer]
  {- Unfolding: (case GHC.List.$witerate
                        @ GHC.Integer.Type.Integer
                        Day25.stream2
                        Day25.stream1 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ GHC.Integer.Type.Integer ww1 ww2 }) -}
4d6df59adf2cb27b8dd73b1a7382d62a
  stream1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 20151125) -}
4f3d690638efadaf3621d05828bc0d8c
  stream2 :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (\ x :: GHC.Integer.Type.Integer ->
                 GHC.Integer.Type.modInteger
                   (GHC.Integer.Type.timesInteger x Day25.stream4)
                   Day25.stream3) -}
6a7f28bebaf694fad02e3d97b8638363
  stream3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 33554393) -}
2305f2bce57638d8b1ee6619c78c9524
  stream4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 252533) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

